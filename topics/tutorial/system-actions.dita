<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN"
"http://docs.oasis-open.org/dita/dtd/topic.dtd">
<topic id="slots">
  <title>Using system Actions</title>
  <body>
    <section conref="../concepts/system-actions.dita#what-are-system-actions"/>
    <section>
      <title>System Actions demonstration</title>
      <p>System Actions don't normally require a lot of special
      attention. To show how system Actions work, we'll create a slot
      for the navigation menu on the main decorator template. The
      navigation widget will list the available blog
      categories. Clicking on one of the links should bring you to a
      page that only lists posts in a given category. However, we
      won't implement that page, so a 404 error would be triggered upon a link click.</p>
      <p>We've already seen how to set up slots and we won't repeat
      the whole process here again in detail. To sum it up, here are the steps:
      <ol>
  <li>Create a new Model <apiname>Categories</apiname>, which
  has a method to obtain the list of available post
  categories.</li>

  <li>Create a new Action <apiname>ShowNavigation</apiname>
  which queries the above method and draws a list of links to a
  non-existent Action <apiname>ShowCategory</apiname>.</li>
  
  <li>Make sure that <apiname>ShowNavigation</apiname>'s View
  uses a "slot" layout instead of the default one. If a slotted
  View tries to load a layout which includes the same slot, an
  infinite loop occurs, resulting in a crash.</li>

  <li>Edit the decorator template to replace the old static faux
  navigation with the slot.</li>

  <li>Edit the routing map to create a route for
  <apiname>ShowCategory</apiname>, conveniently forgetting to create the Action itself.</li>
      </ol>
      </p>
      <p>Now that the navigation is moved into its own Action and
      displayed from a slot, click one of the links to the
      categories. You will see a "404 Not Found" page, which is
      already dressed in our decorator template, because it uses the
      default layout to render its output.</p> 
      <p>This "404 Not Found"
      page is indeed created by a system Action. You can find it
      directly or via <filepath>app/config/settings.xml</filepath> and
      edit its template if you want to customize it.</p>
    </section>
  </body>
</topic>
