<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN"
"http://docs.oasis-open.org/dita/dtd/topic.dtd">
<topic id="basic-auth-security">
  <title>Creating secure Actions</title>
  <body>
    <section>
      <title>Login action &amp; backend Model</title>
      <p>If we want to enforce security restrictions, we need to
      authenticate the users first. Let's implement a simple login
      procedure first. To look up users in the database, we'll need a
      Model, and to implement the actual Login process, we need an Action.</p>
      <p>Users Model:
      <codeblock conref="../examples/security.dita#bloggie-users-model"/>
      </p>
      <p>The Model has a single method which takes an username and a
      password and returns an array containing the user details if the
      login is valid. This is a very primitive security scheme which
      works well on small scale.</p>
      <p>Login Action:
      <codeblock conref="../examples/security.dita#bloggie-login-action"/>
      </p>
      <p>The Login action's "write" method grabs the supplied username
      and password and asks the Model to verify the credentials. If
      there is a match, the <apiname>User</apiname> object is set to
      the authenticated state.</p>
    </section>
    <section>
      <title>Making Admin Actions secure</title>
      <p>There are already some admin Actions in the applications, and
      this tutorial doesn't bother to describe them, as they don't
      make use of any features that weren't covered previously. We
      want to make sure that none of these Actions, except for the
      Login action, can be accessed by an user who hasn't
      authenticated. Thus, we make all other Actions secure by defining <apiname>isSecure</apiname>(), for example:
	<codeblock conref="../examples/security.dita#bloggie-secure-action"/>
      </p>
      <p>When an unauthenticated user attempts to access a secure
      Action, Agavi looks up the system login Action, which is then
      executed instead, showing the login window to the user.</p>
    </section>
  </body>
</topic>
