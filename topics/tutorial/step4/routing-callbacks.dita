<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN"
"http://docs.oasis-open.org/dita/dtd/topic.dtd">
<topic id="routing-callbacks">
  <title>Routing Callbacks</title>

  <body>
    <p>A routing callback is a class that can intercept certain routing
    actions and modify parameters or other options. It is notified when</p>

    <ul>
      <li>A route is generated</li>

      <li>A route has been matched</li>

      <li>An attempt was made to match a route but it has not been
      matched</li>
    </ul>

    <p>A routing callback is not notified if maching stopped before there was
    an attempt to match the route. The routing notifies the callbacks by
    calling the appropriate methods on the callback -
    <apiname>AgaviRoutingCallback::onGenerate()</apiname> when the route is
    being generated, <apiname>AgaviRoutingCallback::onMatched()</apiname> when
    the route matched, <apiname>AgaviRoutingCallback::onNotMatched()</apiname>
    in case an attempt to match the route failed. A route may define any
    number of callbacks that are executed in the order they're defined in,
    however excessive use of callbacks can slow your routing.</p>

    <section><title>AgaviRoutingCallback::onGenerate()</title><p>This method
    is called when the route is about to be reverse generated into an URL. It
    can be used to modify the parameters and options passed to the call of
    <apiname>AgaviRouting::gen()</apiname> by the user. This method can be
    used to turn objects into routing parameters, strip undesired characters
    from parameters etc. If this method returns false the url-snippet
    generated by this route is not generated.</p></section>

    <section><title>AgaviRoutingCallback::onMatched()</title><p>This method is
    called when the regular expression of the route matched. It may inspect
    and modify any of the parameters extracted from the route or add new
    parameters. If this method returns false, the route counts as not matched
    and all parameters modified will be reset. The callback may modify the
    execution container as well. If the callback returns a response object the
    resulting response is sent immediatly without any action execution. This
    behavior can be used for quick redirects.</p></section>

    <section><title>AgaviRoutingCallback::onNotMatched()</title><p>This method
    is called when the regular expression of the route did not match. The
    callback may modify the execution container as well. If the callback
    returns a response object the resulting response is sent immediatly
    without any action execution. This behavior can be used for quick
    redirects.</p></section>

    <section><title>Adding Callbacks to a Route</title><p>A list of callbacks
    may be added to a route by using the &lt;callbacks&gt; tag. The class for
    the callback must either be included before the routing is executed or
    more preferably added to the global autoload definition. Any number of
    parameters may be passed to the callback by adding &lt;ae:parameter&gt;
    tags as required.</p><codeblock outputclass="xml">&lt;route name=".post" pattern="^/(post:\d+)(-{title:[-\w]+})?" action="Post"&gt;
  &lt;callbacks&gt;
    &lt;callback class="PostRoutingCallback" /&gt;
  &lt;/callbacks&gt;
  &lt;route name=".show" pattern="^$" action=".Show" /&gt;
&lt;/route&gt; </codeblock></section>

    <section><title>Routing Values</title><p>An
    <apiname>AgaviRoutingValue</apiname> is a value object that encapsulates
    all parameters passed to the routing. It's purpose is to store some meta
    information about the parameter value, mainly whether it's been encoded or
    not. All parameters passed to
    <apiname>AgaviRoutingCallback::onGenerate()</apiname> are wrapped in
    <apiname>AgaviRoutingValue</apiname> objects and all parameters changed by
    this method must be wrapped as well. </p></section>
  </body>
</topic>
