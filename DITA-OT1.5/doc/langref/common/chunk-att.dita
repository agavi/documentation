<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd" []>
<reference id="chunk-att">
  <title>Chunk Attribute</title>
  <shortdesc>The purpose of the chunk attribute is to control the recognition of units of content within the output. This attribute can be used to extract topics from authored modules for output or to recognize a collection of topics as a unit of content.</shortdesc>
  <refbody>
    <section>
      <title>Examples of use</title>
      <p>Here are some examples of potential uses of the chunk attribute:</p>
      <dl>
        <dlentry>
          <dt>Reuse of a nested topic</dt>
          <dd>A content provider creates a set of topics as a single module. A reuser wants to incorporate only one of the nested topics from the module. The reuse can reference the nested topic from a DITA map, using the chunk attribute to specify that the topic should be produced int its own file.</dd>
        </dlentry>
        <dlentry>
          <dt>Identification of a set of topics as a unit</dt>
          <dd>A curriculum developer wants to compose a lesson for a SCORM LMS (Learning Management System) from a set of topics without constraining reuse of those topics. The LMS can save and restore the learner&apos;s progress through the lesson if the lesson is identified as a referenceable unit. The curriculum developer defines the collection of topics with a DITA map, using the chunk attribute to identify the learning module as a unit before generating the SCORM manifest.</dd>
        </dlentry>
      </dl>
    </section>
    <section>
      <title>Implementation considerations</title>
      <p>The chunk attribute controls the recognition of units of content within the output where output processing divides content across multiple files (such as hyperlinked HTML).</p>
      <p>By default, chunked output generates a single output file for each input unit. If the chunk attribute is set to the &quot;content&quot; token, the content for the referenced topic, any nested referenced topic, and any topics nested within those referenced topics is generated as a single output file. The root name for the output file is taken from the copyto attribute if set, the id attribute if copyto isn&apos;t set, and the referenced topic if neither the copyto or id attribute are set.</p>
      <p>Thus, the following fragment would produce a single output file named parentchunk.html with both the parent and child1 content:</p>
      <pre>&lt;topicref href=&quot;parent.xml&quot; copyto=&quot;parentchunk&quot; chunk=&quot;content&quot;&gt;
    &lt;topicref href=&quot;child1.xml&quot;/&gt;

&lt;/topicref&gt;</pre>
      <p>To produce a separate chunk within an explicit chunk, provide the chunk attribute on a nested topic reference. Use the &quot;none&quot; token to restore default chunking within an explicit chunk. The following example would generate the parent and child1 content in parentchunk.html, the child2 and grandchild2.1 content in child2chunk.html, the child3 content in child3.html, and the grandchild3.1 content in grandchild3.1.html: </p>
      <pre>&lt;topicref href=&quot;parent.xml&quot; chunk=&quot;content&quot; copyto=&quot;parentchunk&quot;&gt;
    &lt;topicref href=&quot;child1.xml&quot;/&gt;
    &lt;topicref href=&quot;child2.xml&quot; chunk=&quot;content&quot; copyto=&quot;child2chunk&quot;&gt;
        &lt;topicref href=&quot;grandchild2.1.xml&quot;/&gt;
    &lt;/topicref&gt;

    &lt;topicref href=&quot;child3.xml&quot; chunk=&quot;none&quot;&gt;
        &lt;topicref href=&quot;grandchild3.1.xml&quot;/&gt;
    &lt;/topicref&gt;
&lt;/topicref&gt;</pre>
      <p>To generate a separate output file from a topic that is nested within another topic within an input unit, refer to the nested topic with the href attribute and set the chunk attribute to the &quot;content&quot; token. The following example would generate the nested topic as nestedchunk.html:</p>
      <pre>&lt;topicref href=&quot;container.xml#nested&quot; copyto=&quot;nestedchunk&quot; chunk=&quot;content&quot;/&gt;</pre>
      <p>Finally, if the chunk attribute is set to the &quot;branch&quot; token, the processing generates separate output units as usual. In addition, however, the processing can identify the topic as the root of a collection of topics that can be read independent from its context as the complete treatment of a subject for deployment frameworks that can manage topic collections.</p>
      <p>The following example identifies a how to for setting up a product as a single unit. The how to might be provided both as navigable HTML pages and as a printable PDF attached to the root HTML page.</p>
      <pre>&lt;topichead navtitle=&quot;How to do lots of things&quot;&gt;
    &lt;topicref href=&quot;webserv.xml&quot; chunk=&quot;branch&quot; navtitle=&quot;How to set up a web server&quot;&gt;
        &lt;topicref href=&quot;child1.xml&quot;/&gt;
         ...
    &lt;/topicref&gt;
    &lt;topicref href=&quot;dbsecure.xml&quot; chunk=&quot;branch&quot; navtitle=&quot;How to ensure database security&quot;&gt;

        &lt;topicref href=&quot;child2.xml&quot;/&gt;
         ...
    &lt;/topicref&gt;
    ...
&lt;/topicref&gt;</pre>
    </section>
  </refbody>
</reference>
