<?xml version="1.0" encoding="utf-8"?>
<!--Arbortext, Inc., 1988-2006, v.4002-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<reference id="reltable" xml:lang="en-us">
<title>reltable</title>
<shortdesc>The relationship table (&lt;<keyword>reltable</keyword>&gt;) defines
relationships between topics, based on the familiar table model of rows (&lt;<keyword>relrow</keyword>&gt;),
columns (&lt;<keyword>relheader</keyword>&gt;), and cells (&lt;<keyword>relcell</keyword>&gt;).
The &lt;<keyword>relcell</keyword>&gt; elements can contain &lt;<keyword>topicref</keyword>&gt;
elements, which are then related to other &lt;<keyword>topicref</keyword>&gt;
elements in the same row (although not necessarily in the same cell). By default,
the contents of a &lt;<keyword>reltable</keyword>&gt; element are not output
for navigation or TOC purposes, and are used only to define relationships
that can be expressed as topic-to-topic links.</shortdesc>
<prolog><metadata>
<keywords><indexterm>reltable</indexterm><indexterm>Map elements<indexterm>reltable</indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section>Relationship tables can be used in conjunction with hierarchies and
groups to manage all the related links in an information set.</section>
<example><title>Example</title><p>In this example, a relationship table is
defined with three columns; one for &quot;concept&quot;, one for &quot;task&quot;,
and one for &quot;reference&quot;. Three cells are defined within one row.
The first cell contains one concept topic: batsonar.dita.<?Pub Caret?> The
second cell contains two task topics: batcaring.dita and batfeeding.dita.
The third cell contains two reference topics: batguano.dita and bathistory.dita.</p><codeblock>&lt;map&gt;
 &lt;reltable&gt;
  &lt;relheader&gt;
   &lt;relcolspec type=&quot;concept&quot;/&gt;
   &lt;relcolspec type=&quot;task&quot;/&gt;
   &lt;relcolspec type=&quot;reference&quot;/&gt;
  &lt;/relheader&gt;
  &lt;relrow&gt;
   &lt;relcell&gt;&lt;topicref href=&quot;batsonar.dita&quot;/&gt;&lt;/relcell&gt;
   &lt;relcell&gt;
     &lt;topicref href=&quot;batcaring.dita&quot;/&gt;
     &lt;topicref href=&quot;batfeeding.dita&quot;/&gt;
   &lt;/relcell&gt;
   &lt;relcell&gt;
     &lt;topicref href=&quot;batguano.dita&quot;/&gt;
     &lt;topicref href=&quot;bathistory.dita&quot;/&gt;
   &lt;/relcell&gt;
  &lt;/relrow&gt;
 &lt;/reltable&gt;
&lt;/map&gt;</codeblock><p>A table view of the tagging would look like this:</p><simpletable>
<sthead>
<stentry>type=&quot;concept&quot;</stentry>
<stentry>type=&quot;task&quot;</stentry>
<stentry>type=&quot;reference&quot;</stentry>
</sthead>
<strow>
<stentry>batsonar.dita</stentry>
<stentry>batcaring.dita, batfeeding.dita</stentry>
<stentry>batguano.dita, bathistory.dita</stentry>
</strow>
</simpletable><p>On output, links should be added to topics that are in the
same row, but not in the same cell. This allows simple maintenance of parallel
relationships: for example, in this case, batcaring.dita and batfeeding.dita
are two tasks that require the same supporting information (concept and reference
topics) but might otherwise be unrelated. When topics in the same cell are
in fact related, the cell&apos;s collection-type attribute can be set to family.
If some cells or columns are intended solely as supporting information and
should not link back to topics in other cells, you can set the linking attribute
on the cell or relcolspec to targetonly.</p><p>In this example, the related
links would be as follows:<dl><dlentry>
<dt>batsonar.dita</dt>
<dd>batcaring.dita, batfeeding.dita, batguano.dita, bathistory.dita</dd>
</dlentry><dlentry>
<dt>batcaring.dita</dt>
<dd>batsonar.dita, batguano.dita, bathistory.dita</dd>
</dlentry><dlentry>
<dt>batfeeding.dita</dt>
<dd>batsonar.dita, batguano.dita, bathistory.dita</dd>
</dlentry><dlentry>
<dt>batguano.dita</dt>
<dd>batsonar.dita, batcaring.dita, batfeeding.dita</dd>
</dlentry><dlentry>
<dt> bathistory.dita</dt>
<dd>batsonar.dita, batcaring.dita, batfeeding.dita</dd>
</dlentry></dl>Although the table may initially take some time to learn and
manipulate, it is inherently a more efficient form to manage these links.
It is also easier to see and manage patterns using the table; for example,
the fact that batfeeding.dita and batcaring.dita have the same relationships
to supporting information is clear from the table, but would require some
comparison and counting to determine from just the definition list summary.</p></example>
<section conref="../common/commonNavLibraryTable.dita#models/reltable-contains" otherprops="contains"></section>
<section conref="../common/commonNavLibraryTable.dita#models/reltable-containedby"
otherprops="containedby"></section>
<section conref="../common/commonNavLibraryTable.dita#models/reltable-classvalue" otherprops="classvalue"></section>
<section id="attrs">       <title>Attributes</title>       <simpletable id="reltable_attr"
relcolwidth="2* 3* 1* 1* 1*">
<sthead>
<stentry>Name</stentry>
<stentry>Description</stentry>
<stentry>Data Type</stentry>
<stentry>Default Value</stentry>
<stentry>Required?</stentry>
</sthead>
<strow conref="../common/commonLRdefs.dita#commonLRdefs/title">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="../common/commonLRdefs.dita#commonLRdefs/topicref-atts-no-toc">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="../common/commonLRdefs.dita#commonLRdefs/univ-atts">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="../common/commonLRdefs.dita#commonLRdefs/global-atts">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="../common/commonLRdefs.dita#commonLRdefs/classandout"><stentry/><stentry/><stentry/><stentry/><stentry/></strow>
</simpletable>     </section>
</refbody>
</reference>
<?Pub *0000006257?>
