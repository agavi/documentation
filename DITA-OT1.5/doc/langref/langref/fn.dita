<?xml version="1.0" encoding="utf-8"?>
<!--Arbortext, Inc., 1988-2006, v.4002-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<reference id="fn" xml:lang="en-us">
<title>fn</title>
<shortdesc>Use footnote (&lt;<keyword>fn</keyword>&gt;) to annotate text with
notes that are not appropriate for inclusion in line or to indicate the source
for facts or other material used in the text. </shortdesc>
<prolog><metadata>
<keywords><indexterm>fn (footnote)</indexterm><indexterm>footnote (fn)</indexterm>
<indexterm>Miscellaneous elements<indexterm>fn</indexterm></indexterm></keywords>
</metadata></prolog>
<refbody>
<section>Footnote content is always skipped at the place where it was entered,
and reproduced elsewhere, according to these rules: <ul>
<li>A footnote with no given <i><keyword>id</keyword></i> attribute is a <b>single-use</b> footnote.
Upon output, it generates a number as a superscript <q>callout</q> that is
linked to the placement of the footnote, usually at the bottom of the immediate
printed page or at the end of the Web article. Subsequent footnotes in the
same topic will have the next number in sequence for their callouts. If you
enter a particular character in the <i><keyword>callout</keyword></i> attribute
for the footnote, that character will be used as the superscript <q>callout</q> that
is linked to the placement of the footnote.                              
        </li>
<li>A footnote entered with an <i><keyword>id</keyword></i> attribute is a <b>use-by-reference</b> footnote.
Upon output, it does not appear anywhere unless it has been referenced using
an &lt;<keyword>xref</keyword>&gt; with the <i><keyword>type</keyword></i> attribute
set to <q>fn</q>. The same callout behaviors will apply.</li>
<li>Ordinarily, a footnote in one topic can't be referenced in another topic.
The previous behaviors are local to each topic. But by using the &lt;<keyword>conref</keyword>&gt;
mechanism, you can instance another topic's footnote into the local topic
where it will then follow those behaviors:<ul>
<li>If you use <codeph>&lt;fn conref="thatid"&gt;&lt;/fn&gt;</codeph> all
by itself, the result will be the same as the single-use footnote entered
literally in the same location.</li>
<li>If you use <codeph>&lt;fn conref="thatid" id="thisid"&gt;&lt;/fn&gt;</codeph>,
then <codeph>&lt;xref href="thisid" type="fn"/&gt;</codeph>, the result will
be the same as the use-by-reference model described before.</li>
</ul></li>
</ul></section>
<example rev="1.1"><title>Example</title><p>The first example uses a simple
fn element, with no ID and no callout attribute. In that case, markup such
as the following:<codeblock>The memory storage capacity of the computer is 
2 GB&lt;fn&gt;A GB (gigabyte) is equal to 
1000 million bytes&lt;/fn&gt; with error correcting support.</codeblock>may produce
output similar to the following:<lq><p>The memory storage capacity of the
computer is 2 GB<sup>1</sup> with error correcting support.</p><p><codeph>......</codeph></p><p><sup>1</sup> A
GB (gigabyte) is equal to  1000 million bytes</p><p>----- [bottom of page] -----------------------------------------------------------------</p></lq
></p><p>The second example uses a callout attribute. It is marked up as follows:<codeblock>The memory storage capacity of the computer is 
2 GB&lt;fn callout="#"&gt;A GB (gigabyte) is equal to 
1000 million bytes&lt;/fn&gt; with error correcting support.</codeblock>That
DITA markup may produce output similar to the following:<lq><p>The memory
storage capacity of the computer is 2 GB<sup>#</sup> with error correcting
support.</p><p><codeph>......</codeph></p><p><sup>#</sup> A GB (gigabyte)
is equal to  1000 million bytes</p><p>----- [bottom of page] -----------------------------------------------------------------</p></lq></p><p>The
third example uses an ID on a footnote, and then references that ID multiple
times. The DITA markup looks like this:<codeblock>I like pets. <?Pub Caret?>&lt;fn id="reuse-fn">This is the name of an animal.&lt;/fn>
At my house, I have a dog&lt;xref href="#topic/reuse-fn"/>, a
cat&lt;xref href="#topic/reuse-fn"/>, and a llama&lt;xref href="topic/reuse-fn"/>.</codeblock>and
may produce output similar to the following:<lq><p>I like pets. At my house,
I have a dog<sup>1</sup>, a cat<sup>1</sup>, and a llama<sup>1</sup>.</p><p><codeph>......</codeph></p><p><sup>1</sup>This
is the name of an animal.</p><p>----- [bottom of page] -----------------------------------------------------------------</p></lq></p><note>Footnote
support may vary between different output types, depending on conventions
and capabilities. For example, PDF output may lack support for the <i>callout</i> attribute,
or footnotes may be collected as endnotes for certain types of Web publications.</note></example>
<section conref="../common/commonNavLibraryTable.dita#models/fn-contains" otherprops="contains"></section>
<section conref="../common/commonNavLibraryTable.dita#models/fn-containedby" otherprops="containedby"></section>
<section conref="../common/commonNavLibraryTable.dita#models/fn-classvalue" otherprops="classvalue"></section>
<section id="attrs"><title>Attributes</title> <simpletable id="fn_attr" relcolwidth="2* 3* 1* 1* 1*">
<sthead>
<stentry>Name</stentry>
<stentry>Description</stentry>
<stentry>Data Type</stentry>
<stentry>Default Value</stentry>
<stentry>Required?</stentry>
</sthead>
<strow conref="../common/commonLRdefs.dita#commonLRdefs/callout">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="../common/commonLRdefs.dita#commonLRdefs/univ-atts">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="../common/commonLRdefs.dita#commonLRdefs/global-atts">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="../common/commonLRdefs.dita#commonLRdefs/classandout"><stentry/><stentry/><stentry/><stentry/><stentry/></strow>
</simpletable> </section>
</refbody>
</reference>
<?Pub *0000006322?>
